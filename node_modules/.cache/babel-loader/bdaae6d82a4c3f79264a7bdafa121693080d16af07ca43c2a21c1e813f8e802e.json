{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matheus\\\\Desktop\\\\shelf\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const [isRegisterMode, setIsRegisterMode] = useState(false); // Estado para controlar o modo de registro\n\n  const handleLogin = event => {\n    event.preventDefault(); // Impede o envio do formulário\n\n    // Realizar a validação de login (substitua com sua lógica de autenticação)\n    if (username === 'admin' && password === 'password') {\n      alert('Login bem-sucedido');\n      // Redirecionar para outra página ou executar ações adicionais\n      navigate('/dashboard');\n    } else {\n      alert('Nome de usuário ou senha inválidos');\n    }\n  };\n  const handleToggleMode = () => {\n    setUsername('');\n    setPassword('');\n    setIsRegisterMode(!isRegisterMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"login-title\",\n      children: isRegisterMode ? 'Cadastro' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleLogin,\n      children: [isRegisterMode && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nome completo\",\n        value: username,\n        onChange: event => setUsername(event.target.value),\n        required: true,\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nome de usu\\xE1rio\",\n        value: username,\n        onChange: event => setUsername(event.target.value),\n        required: true,\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Senha\",\n        value: password,\n        onChange: event => setPassword(event.target.value),\n        required: true,\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: isRegisterMode ? 'Registrar' : 'Entrar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-mode-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: isRegisterMode ? 'Já tem uma conta?' : 'Ainda não tem uma conta?'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-mode-button\",\n        onClick: handleToggleMode,\n        children: isRegisterMode ? 'Entrar' : 'Registrar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"zBDcTvmtdJ+Z+Dg2k2N0EyoFRcE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","navigate","isRegisterMode","setIsRegisterMode","handleLogin","event","preventDefault","alert","handleToggleMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/matheus/Desktop/shelf/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n  const [isRegisterMode, setIsRegisterMode] = useState(false); // Estado para controlar o modo de registro\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault(); // Impede o envio do formulário\r\n\r\n    // Realizar a validação de login (substitua com sua lógica de autenticação)\r\n    if (username === 'admin' && password === 'password') {\r\n      alert('Login bem-sucedido');\r\n      // Redirecionar para outra página ou executar ações adicionais\r\n      navigate('/dashboard');\r\n    } else {\r\n      alert('Nome de usuário ou senha inválidos');\r\n    }\r\n  };\r\n\r\n  const handleToggleMode = () => {\r\n    setUsername('');\r\n    setPassword('');\r\n    setIsRegisterMode(!isRegisterMode);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1 className=\"login-title\">{isRegisterMode ? 'Cadastro' : 'Login'}</h1>\r\n      <form className=\"login-form\" onSubmit={handleLogin}>\r\n        {isRegisterMode && (\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Nome completo\"\r\n            value={username}\r\n            onChange={(event) => setUsername(event.target.value)}\r\n            required\r\n            className=\"login-input\"\r\n          />\r\n        )}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nome de usuário\"\r\n          value={username}\r\n          onChange={(event) => setUsername(event.target.value)}\r\n          required\r\n          className=\"login-input\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Senha\"\r\n          value={password}\r\n          onChange={(event) => setPassword(event.target.value)}\r\n          required\r\n          className=\"login-input\"\r\n        />\r\n        <button type=\"submit\" className=\"login-button\">\r\n          {isRegisterMode ? 'Registrar' : 'Entrar'}\r\n        </button>\r\n      </form>\r\n      <div className=\"toggle-mode-container\">\r\n        <span>\r\n          {isRegisterMode ? 'Já tem uma conta?' : 'Ainda não tem uma conta?'}\r\n        </span>\r\n        <button className=\"toggle-mode-button\" onClick={handleToggleMode}>\r\n          {isRegisterMode ? 'Entrar' : 'Registrar'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}